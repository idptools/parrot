[build-system]

# delete cython/numpy if not needed
requires = ["setuptools>=61", "versioningit~=2.0", "numpy", ]
build-backend = "setuptools.build_meta"


# define project info
[project]
name = "idptools-parrot"
dynamic = ["version"]
description = "encodes a computationally-robust bidirectional recurrent neural network (BRNN) behind an easy-to-use commandline interface. PARROT is well-suited for a variety of protein bioinformatics tasks. With only an input data file containing sequences and mapped values, the user can automatically train a network for whatever purpose. This trained network can then be applied to new, unlabeled data to generate predictions and generate biological hypotheses."
authors = [
    {name = "Dan Griffith", email = "degriffith@wustl.edu"},
	{name = "Alex Holehouse", email = "alex.holehouse@wustl.edu"}
]

license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"  
requires-python = ">=3.7"

# add in as needed	
dependencies = [	  
    "numpy",
    "scipy",
	"torch>=1.8.0",
    "more-itertools",
    "scikit-learn",
    "matplotlib",
    "seaborn",
    "pandas",
	
]

[project.optional-dependencies]
test = [
  "pytest>=6.1.2",
]
optimize = ["GPy", "GPyOpt"]

# define all the command-line scripts; example left, but you
# can delete this section if none.
[project.scripts]
parrot-cvsplit = "parrot.scripts.parrot_cvsplit:main"
parrot-optimize = "parrot.scripts.parrot_optimize:main"
parrot-train = "parrot.scripts.parrot_train:main"
parrot-predict = "parrot.scripts.parrot_predict:main"
parrot-preprocess = "parrot.scripts.parrot_preprocess:main"

[tool.setuptools]
zip-safe = false
include-package-data = true 

[tool.setuptools.packages.find]
namespaces = true
where = ["."]
include = ["parrot", "parrot.*"]  # Discover all sub-packages inside the main package

[tool.setuptools.package-data]
parrot = [
    "py.typed"
]

[tool.versioningit]
default-version = "1+unknown"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
	
[tool.versioningit.vcs]
# The method key:
method = "git"  # <- The method name
# Parameters to pass to the method:
match = ["*"]
default-tag = "1.0.0"

[tool.versioningit.write]
file = "parrot/_version.py"
